/* Copyright (c) <2009> <Newton Game Dynamics>
* 
* This software is provided 'as-is', without any express or implied
* warranty. In no event will the authors be held liable for any damages
* arising from the use of this software.
* 
* Permission is granted to anyone to use this software for any purpose,
* including commercial applications, and to alter it and redistribute it
* freely
*/

#include "dContainersStdAfx.h"
#include "dCRC.h"


static dCRCTYPE randBits0[] =
{
	7266447313870364031LL,  4946485549665804864LL, 16945909448695747420LL, 16394063075524226720LL,  
	4873882236456199058LL, 14877448043947020171LL,  6740343660852211943LL, 13857871200353263164LL,
	5249110015610582907LL, 10205081126064480383LL,  1235879089597390050LL, 17320312680810499042LL,
	16489141110565194782LL,  8942268601720066061LL, 13520575722002588570LL, 14226945236717732373LL, 

	9383926873555417063LL, 15690281668532552105LL, 11510704754157191257LL, 15864264574919463609LL, 
	6489677788245343319LL,  5112602299894754389LL, 10828930062652518694LL, 15942305434158995996LL,
	15445717675088218264LL, 4764500002345775851LL, 14673753115101942098LL,  236502320419669032LL, 
	13670483975188204088LL, 14931360615268175698LL, 8904234204977263924LL, 12836915408046564963LL, 

	12120302420213647524LL, 15755110976537356441LL,  5405758943702519480LL, 10951858968426898805LL, 
	17251681303478610375LL,  4144140664012008120LL, 18286145806977825275LL, 13075804672185204371LL, 
	10831805955733617705LL,  6172975950399619139LL, 12837097014497293886LL, 12903857913610213846LL,
	560691676108914154LL,    1074659097419704618LL, 14266121283820281686LL, 11696403736022963346LL, 

	13383246710985227247LL,  7132746073714321322LL, 10608108217231874211LL, 9027884570906061560LL, 
	12893913769120703138LL, 15675160838921962454LL,  2511068401785704737LL, 14483183001716371453LL, 
	3774730664208216065LL,  5083371700846102796LL,  9583498264570933637LL, 17119870085051257224LL, 
	5217910858257235075LL, 10612176809475689857LL,  1924700483125896976LL,  7171619684536160599LL,


	10949279256701751503LL, 15596196964072664893LL, 14097948002655599357LL, 615821766635933047LL, 
	5636498760852923045LL, 17618792803942051220LL, 580805356741162327LL,   425267967796817241LL, 
	8381470634608387938LL, 13212228678420887626LL, 16993060308636741960LL, 957923366004347591LL, 
	6210242862396777185LL,  1012818702180800310LL, 15299383925974515757LL, 17501832009465945633LL,

	17453794942891241229LL, 15807805462076484491LL,  8407189590930420827LL,   974125122787311712LL,
	1861591264068118966LL, 997568339582634050LL, 18046771844467391493LL, 17981867688435687790LL, 
	3809841506498447207LL,  9460108917638135678LL, 16172980638639374310LL,   958022432077424298LL, 
	4393365126459778813LL, 13408683141069553686LL, 13900005529547645957LL, 15773550354402817866LL,

	16475327524349230602LL,  6260298154874769264LL, 12224576659776460914LL,  6405294864092763507LL, 
	7585484664713203306LL,  5187641382818981381LL, 12435998400285353380LL, 13554353441017344755LL,
	646091557254529188LL, 11393747116974949255LL, 16797249248413342857LL, 15713519023537495495LL,
	12823504709579858843LL,  4738086532119935073LL, 4429068783387643752LL,  585582692562183870LL,

	1048280754023674130LL, 6788940719869959076LL, 11670856244972073775LL, 2488756775360218862LL,
	2061695363573180185LL,  6884655301895085032LL, 3566345954323888697LL, 12784319933059041817LL,
	4772468691551857254LL,  6864898938209826895LL,  7198730565322227090LL, 2452224231472687253LL,
	13424792606032445807LL, 10827695224855383989LL, 11016608897122070904LL, 14683280565151378358LL,

	7077866519618824360LL, 17487079941198422333LL, 3956319990205097495LL,  5804870313319323478LL,
	8017203611194497730LL,  3310931575584983808LL,  5009341981771541845LL, 11772020174577005930LL,
	3537640779967351792LL,  6801855569284252424LL, 17687268231192623388LL, 12968358613633237218LL, 
	1429775571144180123LL, 10427377732172208413LL, 12155566091986788996LL, 16465954421598296115LL, 

	12710429690464359999LL, 9547226351541565595LL, 12156624891403410342LL,  2985938688676214686LL,
	18066917785985010959LL,  5975570403614438776LL, 11541343163022500560LL, 11115388652389704592LL,
	9499328389494710074LL,  9247163036769651820LL,  3688303938005101774LL, 2210483654336887556LL,
	15458161910089693228LL,  6558785204455557683LL,  1288373156735958118LL, 18433986059948829624LL,

	3435082195390932486LL, 16822351800343061990LL,  3120532877336962310LL, 16681785111062885568LL,  
	7835551710041302304LL, 2612798015018627203LL, 15083279177152657491LL, 6591467229462292195LL,
	10592706450534565444LL,  7438147750787157163LL, 323186165595851698LL, 7444710627467609883LL,
	8473714411329896576LL,  2782675857700189492LL,  3383567662400128329LL, 3200233909833521327LL,

	12897601280285604448LL, 3612068790453735040LL, 8324209243736219497LL, 15789570356497723463LL,
	1083312926512215996LL,  4797349136059339390LL, 5556729349871544986LL, 18266943104929747076LL,
	1620389818516182276LL, 172225355691600141LL,  3034352936522087096LL,  1266779576738385285LL,
	3906668377244742888LL,  6961783143042492788LL, 17159706887321247572LL,  4676208075243319061LL,

	10315634697142985816LL, 13435140047933251189LL, 716076639492622016LL,	13847954035438697558LL,
	7195811275139178570LL, 10815312636510328870LL,  6214164734784158515LL, 16412194511839921544LL, 
	3862249798930641332LL,  1005482699535576005LL,  4644542796609371301LL, 17600091057367987283LL, 
	4209958422564632034LL, 5419285945389823940LL, 11453701547564354601LL,  9951588026679380114LL,

	7425168333159839689LL,  8436306210125134906LL, 11216615872596820107LL,  3681345096403933680LL,
	5770016989916553752LL, 11102855936150871733LL, 11187980892339693935LL, 396336430216428875LL, 
	6384853777489155236LL,  7551613839184151117LL, 16527062023276943109LL, 13429850429024956898LL,
	9901753960477271766LL,  9731501992702612259LL,  5217575797614661659LL, 10311708346636548706LL,

	15111747519735330483LL, 4353415295139137513LL,  1845293119018433391LL, 11952006873430493561LL,
	3531972641585683893LL, 16852246477648409827LL,	15956854822143321380LL, 12314609993579474774LL,
	16763911684844598963LL, 16392145690385382634LL,  1545507136970403756LL, 17771199061862790062LL,
	12121348462972638971LL, 12613068545148305776LL,   954203144844315208LL,  1257976447679270605LL, 

	3664184785462160180LL,  2747964788443845091LL, 15895917007470512307LL, 15552935765724302120LL,
	16366915862261682626LL, 8385468783684865323LL, 10745343827145102946LL, 2485742734157099909LL, 
	916246281077683950LL,	 15214206653637466707LL, 12895483149474345798LL,  1079510114301747843LL,
	10718876134480663664LL,  1259990987526807294LL,  8326303777037206221LL, 14104661172014248293LL,
};


dCRCTYPE dCombineCRC (dCRCTYPE a, dCRCTYPE b)
{
	return (a << 8) ^ b;
}

// calculate a 32 bit crc of a string
dCRCTYPE dCRC64 (const char* const name, dCRCTYPE crcAcc)
{
	if (name) {
		const int bitshift = (sizeof (dCRCTYPE)<<3) - 8;
		for (int i = 0; name[i]; i ++) {
			char c = name[i];
			dCRCTYPE val = randBits0[((crcAcc >> bitshift) ^ c) & 0xff];
			crcAcc = (crcAcc << 8) ^ val;
		}
	}
	return crcAcc;
}


dCRCTYPE dCRC64 (const void* const buffer, int size, dCRCTYPE crcAcc)
{
	const unsigned char* const ptr = (unsigned char*)buffer;

	const int bitshift = (sizeof (dCRCTYPE)<<3) - 8;
	for (int i = 0; i < size; i ++) {
		char c = ptr[i];
		dCRCTYPE  val = randBits0[((crcAcc >> bitshift) ^ c) & 0xff];
		crcAcc = (crcAcc << 8) ^ val;
	}
	return crcAcc;
}



