/* Copyright (c) <2009> <Newton Game Dynamics>
* 
* This software is provided 'as-is', without any express or implied
* warranty. In no event will the authors be held liable for any damages
* arising from the use of this software.
* 
* Permission is granted to anyone to use this software for any purpose,
* including commercial applications, and to alter it and redistribute it
* freely
*/

#include "dContainersStdAfx.h"
#include "dCRC.h"


static dCRCTYPE randBits0[] =
{
	7266447313870364031LL,  4946485549665804864LL, 1694590944869574742LL, 1639406307552422672LL,  
	4873882236456199058LL, 1487744804394702017LL,  6740343660852211943LL, 1385787120035326316LL,
	5249110015610582907LL, 1020508112606448038LL,  1235879089597390050LL, 1732031268081049904LL,
	1648914111056519478LL,  8942268601720066061LL, 1352057572200258857LL, 1422694523671773237LL, 

	938392687355541706LL, 1569028166853255210LL, 1151070475415719125LL, 1586426457491946360LL, 
	6489677788245343319LL,  5112602299894754389LL, 1082893006265251869LL, 1594230543415899599LL,
	1544571767508821826LL, 4764500002345775851LL, 1467375311510194209LL,  236502320419669032LL, 
	1367048397518820408LL, 1493136061526817569LL, 8904234204977263924LL, 1283691540804656496LL, 

	1212030242021364752LL, 1575511097653735644LL,  5405758943702519480LL, 1095185896842689880LL, 
	1725168130347861037LL,  4144140664012008120LL, 1828614580697782527LL, 1307580467218520437LL, 
	1083180595573361770LL,  6172975950399619139LL, 1283709701449729388LL, 1290385791361021384LL,
	560691676108914154LL,    1074659097419704618LL, 1426612128382028168LL, 1169640373602296334LL, 

	1338324671098522724LL,  7132746073714321322LL, 1060810821723187421LL, 9027884570906061560LL, 
	1289391376912070313LL, 1567516083892196245LL,  2511068401785704737LL, 1448318300171637145LL, 
	3774730664208216065LL,  5083371700846102796LL,  958349826457093363LL, 1711987008505125722LL, 
	5217910858257235075LL, 1061217680947568985LL,  1924700483125896976LL,  7171619684536160599LL,


	1094927925670175150LL, 1559619696407266489LL, 1409794800265559935LL, 615821766635933047LL, 
	5636498760852923045LL, 1761879280394205122LL, 580805356741162327LL,   425267967796817241LL, 
	8381470634608387938LL, 1321222867842088762LL, 1699306030863674196LL, 957923366004347591LL, 
	6210242862396777185LL,  1012818702180800310LL, 1529938392597451575LL, 1750183200946594563LL,

	1745379494289124122LL, 1580780546207648449LL,  8407189590930420827LL,   974125122787311712LL,
	1861591264068118966LL, 997568339582634050LL, 1804677184446739149LL, 1798186768843568779LL, 
	3809841506498447207LL,  946010891763813567LL, 1617298063863937431LL,   958022432077424298LL, 
	4393365126459778813LL, 1340868314106955368LL, 1390000552954764595LL, 1577355035440281786LL,

	1647532752434923060LL,  6260298154874769264LL, 1222457665977646091LL,  6405294864092763507LL, 
	7585484664713203306LL,  5187641382818981381LL, 1243599840028535338LL, 1355435344101734475LL,
	646091557254529188LL, 1139374711697494925LL, 1679724924841334285LL, 1571351902353749549LL,
	1282350470957985884LL,  4738086532119935073LL, 4429068783387643752LL,  585582692562183870LL,

	1048280754023674130LL, 6788940719869959076LL, 1167085624497207377LL, 2488756775360218862LL,
	2061695363573180185LL,  6884655301895085032LL, 3566345954323888697LL, 1278431993305904181LL,
	4772468691551857254LL,  6864898938209826895LL,  7198730565322227090LL, 2452224231472687253LL,
	1342479260603244580LL, 1082769522485538398LL, 1101660889712207090LL, 1468328056515137835LL,

	7077866519618824360LL, 1748707994119842233LL, 3956319990205097495LL,  5804870313319323478LL,
	8017203611194497730LL,  3310931575584983808LL,  5009341981771541845LL, 1177202017457700593LL,
	3537640779967351792LL,  6801855569284252424LL, 1768726823119262338LL, 1296835861363323721LL, 
	1429775571144180123LL, 1042737773217220841LL, 1215556609198678899LL, 1646595442159829611LL, 

	1271042969046435999LL, 954722635154156559LL, 1215662489140341034LL,  2985938688676214686LL,
	1806691778598501095LL,  5975570403614438776LL, 1154134316302250056LL, 1111538865238970459LL,
	949932838949471007LL,  924716303676965182LL,  3688303938005101774LL, 2210483654336887556LL,
	1545816191008969322LL,  6558785204455557683LL,  1288373156735958118LL, 1843398605994882962LL,

	3435082195390932486LL, 1682235180034306199LL,  3120532877336962310LL, 1668178511106288556LL,  
	7835551710041302304LL, 2612798015018627203LL, 1508327917715265749LL, 6591467229462292195LL,
	1059270645053456544LL,  7438147750787157163LL, 323186165595851698LL, 7444710627467609883LL,
	8473714411329896576LL,  2782675857700189492LL,  3383567662400128329LL, 3200233909833521327LL,

	1289760128028560444LL, 3612068790453735040LL, 8324209243736219497LL, 1578957035649772346LL,
	1083312926512215996LL,  4797349136059339390LL, 5556729349871544986LL, 1826694310492974707LL,
	1620389818516182276LL, 172225355691600141LL,  3034352936522087096LL,  1266779576738385285LL,
	3906668377244742888LL,  6961783143042492788LL, 1715970688732124757LL,  4676208075243319061LL,

	1031563469714298581LL, 1343514004793325118LL, 716076639492622016LL,	1384795403543869755LL,
	7195811275139178570LL, 1081531263651032887LL,  6214164734784158515LL, 1641219451183992154LL, 
	3862249798930641332LL,  1005482699535576005LL,  4644542796609371301LL, 1760009105736798728LL, 
	4209958422564632034LL, 5419285945389823940LL, 1145370154756435460LL,  995158802667938011LL,

	7425168333159839689LL,  8436306210125134906LL, 1121661587259682010LL,  3681345096403933680LL,
	5770016989916553752LL, 1110285593615087173LL, 1118798089233969393LL, 396336430216428875LL, 
	6384853777489155236LL,  7551613839184151117LL, 1652706202327694310LL, 1342985042902495689LL,
	990175396047727176LL,  973150199270261225LL,  5217575797614661659LL, 1031170834663654870LL,

	1511174751973533048LL, 4353415295139137513LL,  1845293119018433391LL, 1195200687343049356LL,
	3531972641585683893LL, 1685224647764840982LL,	1595685482214332138LL, 1231460999357947477LL,
	1676391168484459896LL, 1639214569038538263LL,  1545507136970403756LL, 1777119906186279006LL,
	1212134846297263897LL, 1261306854514830577LL,   954203144844315208LL,  1257976447679270605LL, 

	3664184785462160180LL,  2747964788443845091LL, 1589591700747051230LL, 1555293576572430212LL,
	1636691586226168262LL, 8385468783684865323LL, 1074534382714510294LL, 2485742734157099909LL, 
	916246281077683950LL,	 1521420665363746670LL, 1289548314947434579LL,  1079510114301747843LL,
	1071887613448066366LL,  1259990987526807294LL,  8326303777037206221LL, 1410466117201424829LL,
};


dCRCTYPE dCombineCRC (dCRCTYPE a, dCRCTYPE b)
{
	return (a << 8) ^ b;
}

// calculate a 32 bit crc of a string
dCRCTYPE dCRC64 (const char* const name, dCRCTYPE crcAcc)
{
	if (name) {
		const int bitshift = (sizeof (dCRCTYPE)<<3) - 8;
		for (int i = 0; name[i]; i ++) {
			char c = name[i];
			dCRCTYPE val = randBits0[((crcAcc >> bitshift) ^ c) & 0xff];
			crcAcc = (crcAcc << 8) ^ val;
		}
	}
	return crcAcc;
}


dCRCTYPE dCRC64 (const void* const buffer, int size, dCRCTYPE crcAcc)
{
	const unsigned char* const ptr = (unsigned char*)buffer;

	const int bitshift = (sizeof (dCRCTYPE)<<3) - 8;
	for (int i = 0; i < size; i ++) {
		char c = ptr[i];
		dCRCTYPE  val = randBits0[((crcAcc >> bitshift) ^ c) & 0xff];
		crcAcc = (crcAcc << 8) ^ val;
	}
	return crcAcc;
}



